version: '2'
services:
  redis:
    image: redis:3.2.4
    command: redis-server --appendonly yes
    ports:
      - '6379:6379'
    volumes:
      - /srv/docker/redis:/data
    restart: on_failure

  api:
    image: 845270614438.dkr.ecr.us-east-1.amazonaws.com/mttrs-api:latest
    command: bash -c "bin/rails assets:precompile && bundle exec puma -C config/puma.rb"
    ports:
      - '3000:3000'
    links:
      - redis:redis.server
    env_file:
      - production.env
    volumes:
      - /srv/docker/api/public/assets:/mttrs-api/public/assets
    restart: on_failure

  frontend:
    image: 845270614438.dkr.ecr.us-east-1.amazonaws.com/mttrs-frontend:latest
    command: bash -c "npm run build-web && node build/web/server/server.js"
    ports:
      - '4001:4001'
    links:
      - api:api.server
    env_file:
      - production.env
    volumes:
      - /srv/docker/frontend/web/public/static:/mttrs-frontend/web/public/static
    restart: on_failure

  worker:
    image: 845270614438.dkr.ecr.us-east-1.amazonaws.com/mttrs-api:latest
    command: bash -c "printenv | sed 's/^\(.*\)/export \1/g' >> ~/.bashrc && bundle exec whenever -f config/schedule/production.rb --update-crontab && service cron start && bundle exec sidekiq"
    links:
      - redis:redis.server
      - proxy:proxy.server
    env_file:
      - production.env
    restart: on_failure

  web:
    build: docker/images/web
    ports:
      - '80:80'
      - '443:443'
    links:
      - api:api.server
      - frontend:frontend.server
      - proxy:proxy.server
      - gb:gb.server
    volumes:
      - /srv/docker/api/public/assets:/mttrs-api/public/assets
      - /srv/docker/frontend/web/public/static:/mttrs-frontend/web/public/static
      - /srv/docker/gb/build:/gb/build
    restart: on_failure

  proxy:
    image: 845270614438.dkr.ecr.us-east-1.amazonaws.com/proxy:latest
    command: bash -c "printenv | sed 's/^\(.*\)/export \1/g' >> ~/.bashrc && bundle exec whenever -f config/schedule/production.rb --update-crontab && service cron start && bin/puma -C config/puma.rb"
    ports:
      - '3002:3002'
    links:
      - redis:redis.server
    env_file:
      - production.env
    restart: on_failure

  gb:
    image: 845270614438.dkr.ecr.us-east-1.amazonaws.com/gb:latest
    command: bash -c "bin/rake assets:precompile && bin/puma -C config/puma.rb"
    ports:
      - '3003:3003'
    volumes:
      - /srv/docker/gb/build:/gb/build
    env_file:
      - production.env
    restart: on_failure
